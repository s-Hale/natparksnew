{"version":3,"sources":["components/Autocomplete/index.js","pages/home/assets/parkcodes.js","pages/home/index.js","pages/park/index.js","App.js","index.js"],"names":["Autocomplete","optionList","options","useState","activeOption","setActiveOption","filteredOptions","setFilteredOptions","showOptions","setShowOptions","userInput","setUserInput","onClick","e","currentTarget","innerText","length","className","map","option","index","to","pathname","parkCode","name","type","onChange","value","filter","toLowerCase","indexOf","onKeyDown","keyCode","parkCodes","Home","Park","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNA6FeA,EAxFM,SAAC,GAAe,IA6C7BC,EA7CeC,EAAa,EAAbA,QAAa,EACMC,mBAAS,GADf,mBACzBC,EADyB,KACXC,EADW,OAEYF,mBAAS,IAFrB,mBAEzBG,EAFyB,KAERC,EAFQ,OAGMJ,oBAAS,GAHf,mBAGzBK,EAHyB,KAGZC,EAHY,OAIEN,mBAAS,IAJX,mBAIzBO,EAJyB,KAIdC,EAJc,KAmB1BC,EAAU,SAACC,GACbR,EAAgB,GAChBE,EAAoB,IACpBE,GAAgB,GAChBE,EAAaE,EAAEC,cAAcC,YAkDjC,OA3BIP,GAAeE,IAEXT,EADAK,EAAgBU,OAEZ,oBAAIC,UAAU,UAAd,SACKX,EAAgBY,KAAI,SAACC,EAAQC,GAE1B,IAAIH,EAIJ,OAHIG,IAAUhB,IACVa,EAAY,iBAGZ,cAAC,IAAD,CACII,GAAI,CAAEC,SAAS,SAAD,OAAWH,EAAOI,WAAaN,UAAWA,EAAiCL,QAASA,EADtG,SAEKO,EAAOK,MADgEL,EAAOI,eAS/F,qBAAKN,UAAU,aAAf,SACI,8CAMZ,sBAAKA,UAAU,SAAf,UACI,uBAAOQ,KAAK,OAAOR,UAAU,aAAaS,SArElC,SAACb,GACb,IAAMH,EAAYG,EAAEC,cAAca,MAC5BrB,EAAkBJ,EAAQ0B,QAC5B,SAACT,GAAD,OACIA,EAAOK,KAAKK,cAAcC,QAAQpB,EAAUmB,gBAAkB,KAGtExB,EAAgB,GAChBE,EAAmBD,GACnBG,GAAgB,GAChBE,EAAaD,IA2DqDqB,UAjDpD,SAAClB,GACf,GAAkB,KAAdA,EAAEmB,QACF3B,EAAgB,GAChBI,GAAe,GACfE,EAAaL,EAAgBF,SAE1B,GAAkB,KAAdS,EAAEmB,QAAgB,CACzB,GAAqB,IAAjB5B,EACA,OAEJC,EAAgBD,EAAe,QAC5B,GAAkB,KAAdS,EAAEmB,QAAgB,CACzB,GAAI5B,EAAe,IAAME,EAAgBU,OACrC,OAEJX,EAAgBD,EAAe,KAkCqDuB,MAAOjB,IAE1FT,MC3DEgC,EAvBG,CAEd,CAEIT,KAAM,SACND,SAAU,QACd,CAACC,KAAM,aACHD,SAAU,QACd,CAACC,KAAM,WACHD,SAAU,QACd,CAACC,KAAM,aACHD,SAAU,QACd,CAACC,KAAM,eACHD,SAAU,QACd,CAACC,KAAM,cACHD,SAAU,QACd,CAACC,KAAM,cACHD,SAAU,QACd,CAACC,KAAM,cACHD,SAAU,SCHHW,EAXF,WAGT,OACI,mCACI,cAAC,EAAD,CAAchC,QAAS+B,OCApBE,EANF,kBACT,kDCiBWC,EAdH,WACR,OACI,cAAC,IAAD,UACI,gCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWL,IACjC,cAAC,IAAD,CAAOI,KAAK,kBAAkBC,UAAWJ,OAE7C,qBAAKlB,UAAU,cCT/BuB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.cb2646f3.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { shape, arrayOf } from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nconst Autocomplete = ({options}) => {\n    const [activeOption, setActiveOption]=useState(0);\n    const [filteredOptions, setFilteredOptions]=useState([]);\n    const [showOptions, setShowOptions] = useState(false);\n    const [userInput, setUserInput] = useState('');\n\n    const onChange =(e)=> {\n        const userInput = e.currentTarget.value;\n        const filteredOptions = options.filter(\n            (option) =>\n                option.name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n\n        setActiveOption(0),\n        setFilteredOptions(filteredOptions),\n        setShowOptions( true),\n        setUserInput(userInput);\n    };\n\n    const onClick = (e) => {\n        setActiveOption(0),\n        setFilteredOptions ([]),\n        setShowOptions (false),\n        setUserInput(e.currentTarget.innerText);\n    };\n\n    const onKeyDown = (e) => {\n        if (e.keyCode === 13) {\n            setActiveOption(0),\n            setShowOptions(false),\n            setUserInput(filteredOptions[activeOption]);\n\n        } else if (e.keyCode === 38) {\n            if (activeOption === 0) {\n                return;\n            }\n            setActiveOption(activeOption - 1);\n        } else if (e.keyCode === 40) {\n            if (activeOption - 1 === filteredOptions.length) {\n                return;\n            }\n            setActiveOption(activeOption + 1);\n        }\n    };\n\n    let optionList;\n    if (showOptions && userInput) {\n        if (filteredOptions.length) {\n            optionList = (\n                <ul className=\"options\">\n                    {filteredOptions.map((option, index) => {\n\n                        let className;\n                        if (index === activeOption) {\n                            className = 'option-active';\n                        }\n                        return (\n                            <Link\n                                to={{ pathname: `/park/${option.parkCode}`}} className={className} key={option.parkCode} onClick={onClick}>\n                                {option.name}\n                            </Link>\n                        );\n                    })}\n                </ul>\n            );\n        } else {\n            optionList = (\n                <div className=\"no-options\">\n                    <em>No Option</em>\n                </div>\n            );\n        }\n    }\n    return(\n        <div className=\"search\">\n            <input type=\"text\" className=\"search-box\" onChange={onChange} onKeyDown={onKeyDown} value={userInput}/>\n\n            {optionList}\n\n        </div>\n    );\n};\n\nAutocomplete.propTypes = {\n    options: arrayOf(shape({})).isRequired\n};\n\n\nexport default Autocomplete;","const parkCodes = [\n\n    {\n\n        name: 'Acadia',\n        parkCode: 'acad'},\n    {name: 'Shenandoah',\n        parkCode: 'shen'},\n    {name: 'Yosemite',\n        parkCode: 'yose'},\n    {name: 'Everglades',\n        parkCode: 'ever'},\n    {name: 'Grand Canyon',\n        parkCode: 'grca'},\n    {name: 'Yellowstone',\n        parkCode: 'yell'},\n    {name: 'Joshua Tree',\n        parkCode: 'jotr'},\n    {name: 'Grand Teton',\n        parkCode: 'grte'},\n\n];\n\nexport default parkCodes;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Autocomplete from './../../components/Autocomplete/index';\nimport parkCodes from './assets/parkcodes.js';\n\nconst Home = () => {\n\n\n    return (\n        <>\n            <Autocomplete options={parkCodes}/>\n        </>\n    );\n};\n\n\nexport default Home;","\nimport React from 'react';\n\n\nconst Park = () =>(\n    <div>\ni am park page\n    </div>\n);\n\nexport default Park;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\n\nimport Home from '../src/pages/home/index';\nimport Park from './pages/park';\n\nconst App = ()=> {\n    return (\n        <BrowserRouter>\n            <div>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/park/:parkCode\" component={Park} />\n                </Switch>\n                <div className=\"App\" />\n            </div>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}