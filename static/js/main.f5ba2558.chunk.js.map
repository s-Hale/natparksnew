{"version":3,"sources":["components/Autocomplete/index.js","pages/home/assets/parkcodes.js","pages/home/index.js","api/api.js","pages/park/index.js","App.js","index.js"],"names":["Autocomplete","optionList","options","useState","activeOption","setActiveOption","filteredOptions","setFilteredOptions","showOptions","setShowOptions","userInput","setUserInput","onClick","e","currentTarget","innerText","length","className","map","option","index","to","pathname","parkCode","name","type","onChange","value","filter","toLowerCase","indexOf","onKeyDown","keyCode","parkCodes","Home","fetchParkInfo","props","fetch","then","res","json","Park","match","history","useHistory","parkInfo","setParkInfo","loading","setLoading","params","useEffect","data","fullName","description","src","images","url","goBack","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5ba2558.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { shape, arrayOf } from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nconst Autocomplete = ({options}) => {\n    const [activeOption, setActiveOption]=useState(0);\n    const [filteredOptions, setFilteredOptions]=useState([]);\n    const [showOptions, setShowOptions] = useState(false);\n    const [userInput, setUserInput] = useState('');\n\n    const onChange =(e)=> {\n        const userInput = e.currentTarget.value;\n        const filteredOptions = options.filter(\n            (option) =>\n                option.name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n\n        setActiveOption(0),\n        setFilteredOptions(filteredOptions),\n        setShowOptions( true),\n        setUserInput(userInput);\n    };\n\n    const onClick = (e) => {\n        setActiveOption(0),\n        setFilteredOptions ([]),\n        setShowOptions (false),\n        setUserInput(e.currentTarget.innerText);\n    };\n\n    const onKeyDown = (e) => {\n        if (e.keyCode === 13) {\n            setActiveOption(0),\n            setShowOptions(false),\n            setUserInput(filteredOptions[activeOption]);\n\n        } else if (e.keyCode === 38) {\n            if (activeOption === 0) {\n                return;\n            }\n            setActiveOption(activeOption - 1);\n        } else if (e.keyCode === 40) {\n            if (activeOption - 1 === filteredOptions.length) {\n                return;\n            }\n            setActiveOption(activeOption + 1);\n        }\n    };\n\n    let optionList;\n    if (showOptions && userInput) {\n        if (filteredOptions.length) {\n            optionList = (\n                <ul className=\"options\">\n                    {filteredOptions.map((option, index) => {\n\n                        let className;\n                        if (index === activeOption) {\n                            className = 'option-active';\n                        }\n                        return (\n                            <Link\n                                to={{pathname: `/park/${option.parkCode}`}}\n                                className={className}\n                                key={option.parkCode}\n                                onClick={onClick}>\n                                {option.name}\n                            </Link>\n                        );\n                    })}\n                </ul>\n            );\n        } else {\n            optionList = (\n                <div className=\"no-options\">\n                    <em>No Option</em>\n                </div>\n            );\n        }\n    }\n    return(\n        <div className=\"search\">\n            <input type=\"text\" className=\"search-box\" onChange={onChange} onKeyDown={onKeyDown} value={userInput}/>\n\n            {optionList}\n\n        </div>\n    );\n};\n\nAutocomplete.propTypes = {\n    options: arrayOf(shape({})).isRequired\n};\n\n\nexport default Autocomplete;","const parkCodes = [\n\n    {\n        name: 'Acadia',\n        parkCode: 'acad'},\n    {name: 'Arches', parkCode: 'arch'},\n    {name: 'Badlands', parkCode: 'badl'},\n    {name: 'Canyonlands', parkCode: 'cany'},\n    {name: 'Congaree', parkCode: 'cong'},\n    {name: 'American Samoa', parkCode: 'npsa'},\n    {name: 'Big Bend', parkCode: 'bibe'},\n    {name: 'Biscayne', parkCode: 'bisc'},\n    {name: 'Black Canyon', parkCode: 'blca'},\n    {name: 'Bryce Canyon', parkCode: 'brca'},\n    {name: 'Capitol Reef', parkCode: 'care'},\n    {name: 'Carlsbad', parkCode: 'cave'},\n    {name: 'Channel Islands', parkCode: 'chis'},\n    {name: 'Crater Lake', parkCode: 'crla'},\n    {name: 'Cuyahoga Valley', parkCode: 'cuva'},\n    {name: 'Death Valley', parkCode: 'deva'},\n    {name: 'Denali', parkCode: 'dena'},\n    {name: 'Dry Tortugas', parkCode: 'drto'},\n    {name: 'Gates of the Arctic', parkCode: 'gaar'},\n    {name: 'Gateway Arch', parkCode: 'jeff'},\n    {name: 'Glacier', parkCode: 'glac'},\n    {name: 'Glacier Bay', parkCode: 'glba'},\n    {name: 'Great Basin', parkCode: 'grba'},\n    {name: 'Great Sand Dunes', parkCode: 'grsa'},\n    {name: 'Great Smoky Mountains', parkCode: 'grsm'},\n    {name: 'Guadalupe Mountains', parkCode: 'gumo'},\n    {name: 'Haleakala', parkCode: 'hale'},\n    {name: 'Hawaii Volcanoes', parkCode: 'havo'},\n    {name: 'Hot Springs', parkCode: 'hosp'},\n    {name: 'Indiana Dunes', parkCode: 'indu'},\n    {name: 'Isle Royale', parkCode: 'isro'},\n    {name: 'Katmai', parkCode: 'katm'},\n    {name: 'Kenai Fjords', parkCode: 'kefj'},\n    {name: 'Kobuk Valley', parkCode: 'kova'},\n    {name: 'Lake Clark', parkCode: 'lacl'},\n    {name: 'Lassen Volcanic', parkCode: 'lavo'},\n    {name: 'Mammoth Cave', parkCode: 'maca'},\n    {name: 'Mesa Verde', parkCode: 'meve'},\n    {name: 'Mount Rainier', parkCode: 'mora'},\n    {name: 'New River Gorge', parkCode: 'neri'},\n    {name: 'North Cascades', parkCode: 'noca'},\n    {name: 'Olympic', parkCode: 'olym'},\n    {name: 'Petrified Forest', parkCode: 'pefo'},\n    {name: 'Pinnacles', parkCode: 'pinn'},\n    {name: 'Redwood', parkCode: 'redw'},\n    {name: 'Rocky Mountain', parkCode: 'romo'},\n    {name: 'Saguaro', parkCode: 'sagu'},\n    {name: 'Sequoia and Kings Canyon', parkCode: 'seki'},\n    {name: 'Theodore Roosevelt', parkCode: 'thro'},\n    {name: 'Virgin Islands', parkCode: 'viis'},\n    {name: 'Voyageurs', parkCode: 'voya'},\n    {name: 'White Sands', parkCode: 'whsa'},\n    {name: 'Wind Cave', parkCode: 'wica'},\n    {name: 'Wrangell-St Elias', parkCode: 'wrst'},\n    {name: 'Zion', parkCode: 'zion'},\n    {name: 'Shenandoah',\n        parkCode: 'shen'},\n    {name: 'Yosemite',\n        parkCode: 'yose'},\n    {name: 'Everglades',\n        parkCode: 'ever'},\n    {name: 'Grand Canyon',\n        parkCode: 'grca'},\n    {name: 'Yellowstone',\n        parkCode: 'yell'},\n    {name: 'Joshua Tree',\n        parkCode: 'jotr'},\n    {name: 'Grand Teton',\n        parkCode: 'grte'},\n\n];\n\nexport default parkCodes;","import React from 'react';\nimport Autocomplete from './../../components/Autocomplete/index';\nimport parkCodes from './assets/parkcodes.js';\n\nconst Home = () =>\n    <>\n        <Autocomplete options={parkCodes}/>\n    </>\n\n;\n\n\nexport default Home;","\n\n// const fetchAlerts = async props => {\n//     const res = await fetch(\n//         `https://developer.nps.gov/api/v1/alerts?parkCode=${props}&api_key=jCQ5KCtpFgJzqjLe5tSoH14OHMPA1fkuvBKhJY60`\n//     );\n//     return await res.json();\n// };\n\nexport const fetchParkInfo = props => {\n    return fetch(\n        `https://developer.nps.gov/api/v1/parks?parkCode=${props}&api_key=jCQ5KCtpFgJzqjLe5tSoH14OHMPA1fkuvBKhJY60`\n    ).then(res => res.json());\n};\n\n\n\n\nexport default fetchParkInfo;","/* eslint-disable react/prop-types */\nimport React, {useEffect, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport fetchParkInfo from '../../api/api.js';\n\nconst Park = ({match}) => {\n    let history = useHistory();\n    const [parkInfo, setParkInfo] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const parkCode = match.params.parkCode;\n    useEffect(()=> {\n        fetchParkInfo(parkCode).then(res => {\n            setParkInfo(res.data[0]);\n            setLoading(false);\n        });\n    }, []);\n\n    if (loading) return null;\n    return (\n        <>\n            <div className=\"park-page-wrap\">\n                <h3>{parkInfo.fullName}</h3>\n\n                <div>{parkInfo.description}</div>\n                <img className=\"image\" src={`${parkInfo.images[0].url}`}></img>\n\n\n\n\n            </div>\n            <button onClick={() => history.goBack()}>Back</button>\n        </>\n\n    );\n};\n\nexport default Park;","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\n\nimport Home from '../src/pages/home/index';\nimport Park from './pages/park';\n\nconst App = ()=> {\n    return (\n        <HashRouter basename='/'>\n            <div>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/park/:parkCode\" component={Park} />\n                </Switch>\n                <div className=\"App\" />\n            </div>\n        </HashRouter>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}